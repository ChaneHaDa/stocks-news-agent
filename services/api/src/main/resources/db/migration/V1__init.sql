-- Initial schema for news aggregation system

CREATE TABLE news (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    source VARCHAR(255) NOT NULL,
    url VARCHAR(2048) NOT NULL,
    published_at TIMESTAMP WITH TIME ZONE,
    title VARCHAR(1000) NOT NULL,
    body VARCHAR(10000),
    dedup_key VARCHAR(64) UNIQUE,
    lang VARCHAR(10) DEFAULT 'ko',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_news_published ON news(published_at DESC);
CREATE INDEX idx_news_dedup ON news(dedup_key);
CREATE INDEX idx_news_source ON news(source);

CREATE TABLE news_score (
    news_id BIGINT PRIMARY KEY REFERENCES news(id) ON DELETE CASCADE,
    importance REAL NOT NULL CHECK (importance >= 0 AND importance <= 10),
    reason_json VARCHAR(2000),
    rank_score REAL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_news_score_importance ON news_score(importance DESC);
CREATE INDEX idx_news_score_rank ON news_score(rank_score DESC);

-- View for efficient news listing with scores
CREATE VIEW news_with_score AS 
SELECT 
    n.id, n.source, n.url, n.published_at, n.title, n.body, n.dedup_key, n.lang, n.created_at,
    ns.importance, ns.reason_json, ns.rank_score
FROM news n
LEFT JOIN news_score ns ON n.id = ns.news_id;