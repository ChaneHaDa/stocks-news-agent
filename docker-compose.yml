services:
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    container_name: news-agent-api
    ports:
      - "8000:8000"
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
      - ML_SERVICE_URL=http://ml-service:8001
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8000/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    depends_on:
      ml-service:
        condition: service_healthy
    networks:
      - news-agent-network

  ml-service:
    build:
      context: ./ml/serving
      dockerfile: Dockerfile
    container_name: news-agent-ml
    ports:
      - "8001:8001"
    environment:
      - ML_DEBUG=false
      - ML_MODELS_DIR=/app/models
      - ENABLE_IMPORTANCE=true
      - ENABLE_SUMMARIZE=true
      - ENABLE_EMBED=true
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/admin/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - news-agent-network

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: news-agent-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - news-agent-network

networks:
  news-agent-network:
    driver: bridge

volumes:
  # Reserved for future database volumes
  postgres_data: